# Load all your packages here:
library(tidyverse)
library(GGally)
library(rpart)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
training <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
sample_submission <- read_csv("data/sample_submission.csv")
hist(color$training)
hist(training$color)
bar(training$color)
ggplot(data = training,
aes(x = color)) +
geom_bar()
ggplot(data = training,
aes(x = color)) +
geom_bar()
ggplot(data = training,
aes(x = type)) +
geom_bar()
# Load all your packages here:
library(tidyverse)
library(GGally)
library(rpart)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
ggpairs(training, columns = c("bone_length", "rotting_flesh", "hair_length", "has_soul")
ggpairs(training, columns = c("bone_length", "rotting_flesh", "hair_length", "has_soul"))
ggpairs(training, columns = c("bone_length", "rotting_flesh", "hair_length", "has_soul"))
ggpairs(training, columns = c("bone_length", "rotting_flesh", "hair_length", "has_soul"))
View(training)
ggplot(data = training,
aes(x = hair_length, y = type)) +
geom_point(color = type)
ggplot(data = training,
aes(x = hair_length, y = type)) +
geom_point(aes(color = type))
ggplot(data = training,
aes(x = hair_length, y = type)) +
geom_boxplot()
ggplot(data = training,
aes(x = type, y = hair_color)) +
geom_boxplot()
ggplot(data = training,
aes(x = type, y = hair_length)) +
geom_boxplot()
